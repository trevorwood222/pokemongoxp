{"version":3,"sources":["i18n/translations/levels.js","i18n/translations.js","i18n/translations/calculator.js","i18n/translations/result.js","i18n/translations/rawdata.js","i18n/i18n.js","components/Calculator/Calculator.tsx","common/commafy.tsx","components/Result/Result.tsx","components/RawData/RawData.tsx","components/NotFound/NotFound.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["convertToSingularLocale","messages","locale","singleLocale","Object","assign","property","translations","general","languageAbbreviation","de","es","en","ja","fr","zh","back","rewards","header","description","keywords","calculator","currentLevel","currentXPAmount","xpEarningAmount","calculate","language","result","rawdata","main","lvl","timeToReachLevel","hour","hour_plural","minute","minute_plural","twitterMessage","level","xpRequired","totalXPRequired","unlockedItems","levels","gym","pokeball","greatball","ultraball","razzberry","potion","superpotion","hyperpotion","maxpotion","revive","maxrevive","incense","luremodule","incubator","eggincubator","luckyegg","German","Spanish","i18nInitOptions","resources","translation","lng","localStorage","fallbackLng","interpolation","escapeValue","i18n","use","initReactI18next","init","Calculator","Component","constructor","props","super","this","state","undefined","currentEarningAmount","getItem","redirect","handleChange","bind","selectOnChange","handleSubmit","e","key","currentTarget","name","value","parseInt","setState","event","target","forceUpdate","preventDefault","history","push","getRedirectUrl","url","render","to","className","t","onSubmit","type","defaultValue","onChange","Parser","href","commafy","toString","replace","Result","getCurrentLevelObject","i","length","console","error","convertMinutesToHoursAndMinutes","minutes","hours","Math","floor","formatTime","time","count","createListItems","listItems","children","forLevel","open","rewardsOpen","includes","xpToGo","totalXpReq","timeToGetTo","ceil","toLocaleString","onClick","openRewards","index","indexOf","newState","splice","query","URLSearchParams","location","search","get","currentXp","xpEarned","data-href","data-layout","data-size","data-mobile-iframe","fb-xfbml-state","fb-iframe-plugin-query","scrolling","allow","title","src","RawData","printLevel","xpReq","map","d","NotFound","App","browserHistory","createBrowserHistory","listen","action","window","scrollTo","document","documentElement","lang","exact","path","component","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.64298521.chunk.js","sourcesContent":["export const levels = {\n  gym: {\n    de: \"Arena\",\n    es: \"Gimnasio\",\n    en: \"Gym\",\n    ja: \"ジム\",\n    fr: \"Gym\",\n    zh: \"Gym\",\n  },\n  pokeball: {\n    de: \"Pokéball\",\n    es: \"Pokéball\",\n    en: \"Pokéball\",\n    ja: \"モンスターボール\",\n    fr: \"Pokéball\",\n    zh: \"Pokéball\",\n  },\n  greatball: {\n    de: \"Superball\",\n    es: \"Super Ball\",\n    en: \"Great Ball\",\n    ja: \"スーパーボール\",\n    fr: \"Super Ball\",\n    zh: \"Great Ball\",\n  },\n  ultraball: {\n    de: \"HyperBall\",\n    es: \"Ultra Ball\",\n    en: \"Ultra Ball\",\n    ja: \"ハイパーボール\",\n    fr: \"Hyper Ball\",\n    zh: \"Ultra Ball\",\n  },\n  razzberry: {\n    de: \"Himmihbeere\",\n    es: \"Razz Berry\",\n    en: \"Razz Berry\",\n    ja: \"ズリのみ\",\n    fr: \"Baie Framby\",\n    zh: \"Razz Berry\",\n  },\n  potion: {\n    de: \"Trank\",\n    es: \"Poción\",\n    en: \"Potion\",\n    ja: \"キズぐすり\",\n    fr: \"Potion\",\n    zh: \"Potion\",\n  },\n  superpotion: {\n    de: \"Supertrank\",\n    es: \"Superpoción\",\n    en: \"Super Potion\",\n    ja: \"いいキズぐすり\",\n    fr: \"Super Potion\",\n    zh: \"Super Potion\",\n  },\n  hyperpotion: {\n    de: \"Hypertrank\",\n    es: \"Hiperpoción\",\n    en: \"Hyper Potion\",\n    ja: \"すごいキズぐすり\",\n    fr: \"Hyper Potion\",\n    zh: \"Hyper Potion\",\n  },\n  maxpotion: {\n    de: \"Maxtrank\",\n    es: \"Maxpoción\",\n    en: \"Max Potion\",\n    ja: \"まんたんのくすり\",\n    fr: \"Max Potion\",\n    zh: \"Max Potion\",\n  },\n  revive: {\n    de: \"Beleber\",\n    es: \"Revivir\",\n    en: \"Revive\",\n    ja: \"げんぎのかけら\",\n    fr: \"Revivre\",\n    zh: \"Revive\",\n  },\n  maxrevive: {\n    de: \"Maxbeleber\",\n    es: \"Max Revivir\",\n    en: \"Max Revive\",\n    ja: \"げんきのかたまり\",\n    fr: \"Max Revivre\",\n    zh: \"Max Revive\",\n  },\n  incense: {\n    de: \"Rauch\",\n    es: \"Incienso\",\n    en: \"Incense\",\n    ja: \"おこう\",\n    fr: \"Encens\",\n    zh: \"Incense\",\n  },\n  luremodule: {\n    de: \"Lockmodul\",\n    es: \"Módulo Cebo\",\n    en: \"Lure Module\",\n    ja: \"ルアーモジュール\",\n    fr: \"Module Leurre\",\n    zh: \"Lure Module\",\n  },\n  incubator: { // unlimited\n    de: \"Ei-Brutmaschine\",\n    es: \"Incubadora\",\n    en: \"Incubator\",\n    ja: \"ムゲンふかそうち\",\n    fr: \"Incubateur\",\n    zh: \"Incubator\",\n  },\n  eggincubator: { // limited uses\n    de: \"Ei-Brutmaschine\",\n    es: \"Egg Incubadora\",\n    en: \"Egg Incubator\",\n    ja: \"ふかそうち\",\n    fr: \"Egg Incubateur\",\n    zh: \"Egg Incubator\",\n  },\n  luckyegg: { \n    de: \"Glücks-ei\",\n    es: \"Huevo Suerte\",\n    en: \"Lucky Egg\",\n    ja: \"しあわせタマゴ\",\n    fr: \"Oeuf Chance\",\n    zh: \"Lucky Egg\",\n  },\n}","\nimport { levels } from './translations/levels';\nimport { calculator } from './translations/calculator';\nimport { result } from './translations/result';\nimport { rawdata } from './translations/rawdata';\n\n//\n// To make these translations easier we could include a file like this to have side by side translations. \n// Makes maintaining all that much easier\n//\n\n// TODO @Trevor \n// In the event a translation is not there, it will display nothing. Implement a fallback language.\n\n/**\n * Converts our message structure to only contain one locale's text. This is required by our i18n library\n *\n * @param {Object} messages A key/value object containing several localisation texts\n * @param {String} locale The key of the locale text we want in the output\n */\nconst convertToSingularLocale = (messages, locale ) => {\n  let singleLocale = Object.assign({}, messages)\n\n  for (let property in singleLocale) {\n    if (property === locale) {\n      return singleLocale[property]\n    } else if (typeof singleLocale[property] === 'object') {\n      singleLocale[property] = convertToSingularLocale(singleLocale[property], locale)\n    }\n  }\n\n  return singleLocale\n}\n\nconst translations = {\n  general: {\n    languageAbbreviation: {\n      de: \"de\",\n      es: \"es\",\n      en: \"en\",\n      ja: \"ja\",\n      fr: \"fr\",\n      zh: \"zh\",\n    },\n    back: {\n      de: \"Zurück\",\n      es: \"Espalda\",\n      en: \"Back\",\n      ja: \"戻る\",\n      fr: \"Arrière\",\n      zh: \"返回\",\n    },\n    rewards: {\n      de: \"Belohnungen\",\n      es: \"Recompensas\",\n      en: \"Rewards\",\n      ja: \"報酬\",\n      fr: \"Récompenses\",\n      zh: \"奖励\",\n    },\n  },\n  header: {\n    description: {\n      de: \"Pokemon Go XP Rechner, Finden Sie heraus, wie lange es sein wird , bis Sie Ihren nächsten Trainer Niveau zu erreichen und sehen, was Belohnungen warten auf Sie!\",\n      es: \"Pokemon Go XP Calculadora, Averigüe cuánto tiempo pasará hasta que llegue a su siguiente nivel entrenador y ver qué recompensas te esperan!\",\n      en: \"Pokémon Go XP Calculator, Find out how long it will be until you reach your next trainer level and see what rewards await you!\",\n      ja: \"Pokémon Go XP計算機, 次のレベルに進む時間を簡単にはかる！そのレベルの賞罰もわかる！\",\n      fr: \"Pokemon Go XP Calculator, Découvrez combien de temps il sera jusqu'à ce que vous atteignez votre niveau d'entraînement suivant et voir quelles récompenses vous attendent!\",\n      zh: \"Pokemon Go XP计算器, 查看需要升级的经验和获得的奖励!\",\n    },\n    keywords: {\n      de: \"Pokémon GO, Pokemon GO, XP Rechner\",\n      es: \"Pokémon GO, Pokemon Go, XP Calculadora\",\n      en: \"Pokémon GO, Pokemon GO, XP Calculator\",\n      ja: \"Pokémon GO, Pokemon GO, XP計算機\",\n      fr: \"Pokémon GO, Pokemon GO, XP Calculator\",\n      zh: \"Pokémon GO, Pokemon Go, XP计算器\",\n    }\n  },\n  calculator: calculator,\n  result: result,\n  rawdata: rawdata,\n  levels: levels\n}\n\nexport const German = convertToSingularLocale(translations, 'de')\nexport const Spanish = convertToSingularLocale(translations, 'es')\nexport const English = convertToSingularLocale(translations, 'en')\nexport const Japanese = convertToSingularLocale(translations, 'ja')\nexport const French = convertToSingularLocale(translations, 'fr')\nexport const Chinese = convertToSingularLocale(translations, 'zh')\n","export const calculator = {\n  header: {\n    de: \"XP Rechner\",\n    es: \"XP Calculadora\",\n    en: \"XP Calculator\",\n    ja: \"XP計算機\",\n    fr: \"XP Calculator\",\n    zh: \"XP计算器\",\n  },\n  currentLevel: {\n    de: \"Aktuelles Level\",\n    es: \"Nivel Actual\",\n    en: \"Current Level\",\n    ja: \"現在のレベル\",\n    fr: \"Niveau actuel\",\n    zh: \"目前等级\",\n  },\n  currentXPAmount: {\n    de: \"Aktuelle Erfahrung(XP)\",\n    es: \"Cantidad Actual XP\",\n    en: \"Current XP Amount\",\n    ja: \"現在のXP量\",\n    fr: \"Montant XP actuel\",\n    zh: \"目前XP\",\n  },\n  xpEarningAmount: {\n    de: 'Wie viel Erfahrung(XP) bekommst du in <span class=\"bold\">5 Minuten</span>?',\n    es: 'Acerca de la cantidad de XP que está ganando cada <span class=\"bold\">5 minutos</span>?',\n    en: 'About how much XP are you earning every <span class=\"bold\">5 minutes</span>?',\n    ja: '毎<span class=\"bold\">5分</span>にどれぐらいXPをもらっていますか?',\n    fr: 'A propos de combien XP vous gagnez tous les <span class=\"bold\">5 minutes</span>?',\n    zh: '每<span class=\"bold\">5分钟</span>大约能获得多少XP?',\n  },\n  calculate: {\n    de: \"Berechnen!\",\n    es: \"Calcular!\",\n    en: \"Calculate!\",\n    ja: \"ハカル！\",\n    fr: \"Calculer!\",\n    zh: \"计算!\",\n  },\n  language: {\n    de: \"Sprache\",\n    es: \"Idioma\",\n    en: \"Language\",\n    ja: \"言語\",\n    fr: \"Langue\",\n    zh: \"语言\",\n  }\n}\n","export const result = {\n  rawdata: {\n    de: \"Rohdaten\",\n    es: \"Pokemon GO datos\",\n    en: \"Raw Data\",\n    ja: \"レベル情報を見る\",\n    fr: \"Données brutes\",\n    zh: \"原始数据\",\n  },\n  main: {\n    de: '<p> Eine Ebene <span class=\"bold\">{{currentLevel}}</span>, mit <span class=\"bold\">{{currentXp}}</span> XP , verdienen <span class=\"bold\">{{xpEarned}}</span> XP pro 5 Minuten würde dies pro Ebene lange dauern. </p>',\n    es: '<p>Un nivel <span class=\"bold\">{{currentLevel}}</span>, con <span class=\"bold\">{{currentXp}}</span> XP , ganando <span class=\"bold\">{{xpEarned}}</span> XP por 5 minutos tomaría tanto tiempo por nivel.</p>',\n    en: '<p>A level <span class=\"bold\">{{currentLevel}}</span>, with <span class=\"bold\"> {{currentXp}} </span> XP, earning <span class=\"bold\">{{xpEarned}}</span> XP per 5 minutes would take this long per level.</p>',\n    ja: '<p>まず現在は<span class=\"bold\">{{currentLevel}}</span>レベルで, <span class=\"bold\">{{currentXp}}</span> XPとして考えます。 毎5分ごとに<span class=\"bold\">{{xpEarned}}</span>XPをもらっているのなら次のレベルに進む為にはこれぐらいの時間かかります.</p>',\n    fr: '<p>Un niveau <span class=\"bold\"> {{currentLevel}} </span>, avec <span class=\"bold\">{{currentXp}}</span> XP, gagnant <span class=\"bold\">{{xpEarned}}</span> XP par 5 minutes prendrait ce long par niveau. </p>',\n    zh: '<p><span class=\"bold\">{{currentLevel}}</span>级, <span class=\"bold\">{{currentXp}}</span> XP, 每5分钟获得<span class=\"bold\">{{xpEarned}}</span>的话, 需要升级的时间是</p>',\n  },\n  lvl: {\n    de: \"lvl\",\n    es: \"lvl\",\n    en: \"lvl\",\n    ja: \"lvl\",\n    fr: \"lvl\",\n    zh: \"等级\",\n  },\n  timeToReachLevel: {\n    de: \"Zeitebene zu erreichen\",\n    es: \"Tiempo para alcanzar el nivel\",\n    en: \"Time to reach level\",\n    ja: \"かかる時間\",\n    fr: \"Temps pour atteindre le niveau\",\n    zh: \"升级需要的时间\",\n  },\n  hour: {\n    de: \"stunde\",\n    es: \"hora\",\n    en: \"hour\",\n    ja: \"時間\",\n    fr: \"heure\",\n    zh: \"小时\",\n  },\n  hour_plural: {\n    de: \"stunden\",\n    es: \"horas\",\n    en: \"hours\",\n    ja: \"時間\",\n    fr: \"heures\",\n    zh: \"小时\",\n  },\n  minute: {\n    de: \"minute\",\n    es: \"minuto\",\n    en: \"minute\",\n    ja: \"分\",\n    fr: \"minute\",\n    zh: \"分\",\n  },\n  minute_plural: {\n    de: \"minuten\",\n    es: \"minutos\",\n    en: \"minutes\",\n    ja: \"分\",\n    fr: \"minutes\",\n    zh: \"分\",\n  },\n  twitterMessage: {\n    de: \"Prüfen Sie, wie lange es dauert für mich in Pokémon GO um Stufe nach oben !\",\n    es: \"Confirmar el tiempo que va a tomar para mí para subir de nivel en Pokémon GO !\",\n    en: \"Check out how long it'll take for me to level up in Pokémon GO!\",\n    ja: \"しゅげー、見てみな Pokémon GO で次のレベルに進むはこらぐらいの時間かかるそう！\",\n    fr: \"Découvrez combien de temps ça va prendre pour moi de monter de niveau dans Pokémon GO !\",\n    zh: \"Check out how long it'll take for me to level up in Pokémon GO!\",\n  },\n}","export const rawdata = {\n  header:{\n    de: \"Rohdaten für Pokemon Go\",\n    es: \"Pokemon GO datos\",\n    en: \"Raw Data for Pokémon Go\",\n    ja: \"Pokemon Go レベル情報\",\n    fr: \"Données brutes pour Pokemon Go\",\n    zh: \"Pokemon Go的原始数据\",\n  },\n  level:{\n    de: \"Level\",\n    es: \"Nivel\",\n    en: \"level\",\n    ja: \"レベル\",\n    fr: \"Niveau\",\n    zh: \"等级\",\n  },\n  xpRequired:{\n    de: \"Erforderliche XP\",\n    es: \"Necesario XP\",\n    en: \"XP Required\",\n    ja: \"必要なXP\",\n    fr: \"XP Requis\",\n    zh: \"需要XP\",\n  },\n  totalXPRequired:{\n    de: \"Insgesamt XP\",\n    es: \"Total XP\",\n    en: \"Total XP\",\n    ja: \"全部XP\",\n    fr: \"XP Total\",\n    zh: \"总计XP\",\n  },\n  unlockedItems:{\n    de: \"Freigeschaltete Items\",\n    es: \"Los productos desbloqueados\",\n    en: \"Unlocked Items\",\n    ja: \"新規物\",\n    fr: \"Articles déverrouillés\",\n    zh: \"解锁物品\",\n  },\n}","import i18n from 'i18next';\nimport { initReactI18next } from \"react-i18next\";\n\n// import {English} from './english.js';\n// import {Japanese} from './japanese.js';\n// import {Chinese} from './chinese';\n// import {French} from './french';\n// import {German} from './german';\n// import {Spanish} from './spanish';\nimport {\n  English,\n  Japanese,\n  Chinese,\n  French,\n  German,\n  Spanish\n} from './translations';\n\nexport const i18nInitOptions = {\n  resources: {\n    en: { translation: English },\n    ja: { translation: Japanese },\n    de: { translation: German },\n    es: { translation: Spanish },\n    fr: { translation: French },\n    zh: { translation: Chinese },\n  },\n  lng: localStorage.language,\n  fallbackLng: \"en\",\n\n  interpolation: {\n    escapeValue: false\n  }\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init(i18nInitOptions);\n\nexport default i18n;\n","import React, { Component } from 'react';\nimport './Calculator.scss';\nimport t, {i18nInitOptions} from '../../i18n/i18n';\nimport Parser from 'html-react-parser';\nimport i18n from 'i18next';\nimport { initReactI18next } from \"react-i18next\";\nimport { Redirect } from 'react-router';\n\nexport interface CalculatorProps {\n  history: any;\n};\nexport interface CalculatorState {\n  currentLevel: number;\n  currentXPAmount: number;\n  currentEarningAmount: number;\n  language: string;\n  redirect: boolean;\n};\n\nexport default class Calculator extends Component <CalculatorProps, CalculatorState> {\n  constructor(props: CalculatorProps) {\n    super(props);\n    this.state = {\n      currentLevel: (localStorage.currentLevel === undefined) ? 1 : localStorage.currentLevel,\n      currentXPAmount: (localStorage.currentXPAmount === undefined) ? 100 : localStorage.currentXPAmount,\n      currentEarningAmount: (localStorage.currentEarningAmount === undefined) ? 350 : localStorage.currentEarningAmount,\n      language: (localStorage.getItem(\"language\") === null) ? \"en\" : localStorage.language,\n      redirect: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.selectOnChange = this.selectOnChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // beleive it or not, this is the best way... in TypeScript\n  handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const key = e.currentTarget.name;\n    const value = parseInt(e.currentTarget.value);\n    switch(key){\n      case \"currentLevel\":\n        this.setState({currentLevel: value});\n        break;\n      case \"currentXPAmount\":\n        this.setState({currentXPAmount: value});\n        break;\n      case \"currentEarningAmount\":\n        this.setState({currentEarningAmount: value});\n        break;\n      default:\n        return;\n    }\n    localStorage[key] = value;\n  }\n\n  selectOnChange(event: any) {\n    localStorage.language = event.target.value;\n    i18nInitOptions.lng = event.target.value;\n    i18n.use(initReactI18next).init(i18nInitOptions);\n    this.forceUpdate();\n  }\n\n  handleSubmit(event: any){\n    event.preventDefault();\n    this.props.history.push(\"/\");\n    this.setState({\n      redirect: true,\n    })\n  }\n\n  getRedirectUrl(){\n    let url = \"/result?\";\n    url += \"currentLevel=\"+this.state.currentLevel;\n    url += \"&currentXPAmount=\"+this.state.currentXPAmount;\n    url += \"&currentEarningAmount=\"+this.state.currentEarningAmount;\n    return url;\n  }\n\n  render() {\n\n    if (this.state.redirect) {\n      const url = this.getRedirectUrl();\n      return <Redirect to={url}/>;\n    }\n\n    return (  \n      <div className=\"calculator\">\n        <div className=\"logo\">\n          <i>Pokemon Go</i>\n          <h1>{t.t('calculator.header')}</h1>\n        </div>\n        <form onSubmit={this.handleSubmit}>   \n            <div className=\"form-div\">\n            <label>{t.t('calculator.currentLevel')}</label>\n            <input \n              name=\"currentLevel\" \n              type=\"number\" \n              defaultValue={this.state.currentLevel+\"\"}\n              onChange={this.handleChange} />\n          </div>\n          <div className=\"form-div\">\n            <label>{t.t('calculator.currentXPAmount')}</label>\n            <input \n              name=\"currentXPAmount\" \n              type=\"number\" \n              defaultValue={this.state.currentXPAmount+\"\"}\n              onChange={this.handleChange} />\n          </div>\n          <div className=\"form-div\">\n            <label>{Parser(t.t('calculator.xpEarningAmount'))}</label>\n            <input \n              name=\"currentEarningAmount\" \n              type=\"number\" \n              defaultValue={this.state.currentEarningAmount+\"\"}\n              onChange={this.handleChange} />\n          </div>\n          <div className=\"form-div button\">\n            <input type=\"submit\" value={''+t.t('calculator.calculate')+''}/>\n          </div>\n        </form>\n\n        <div className=\"language-option\">\n          <p>{t.t('calculator.language')}: </p>\n          <select onChange={this.selectOnChange} value={this.state.language}>\n            <option value=\"de\">Deutsch</option>\n            <option value=\"en\">English</option>\n            <option value=\"es\">Español</option>\n            <option value=\"fr\">français</option>\n            {/* <option value=\"ru\">русский</option> */}\n            <option value=\"zh\">中文</option>\n            <option value=\"ja\">日本語</option>\n          </select>\n        </div>\n        <div className=\"clear\"></div>\n        <div className=\"bottom-info\">\n          <p>Related</p>\n          <ul>\n            <li><a href=\"https://trevorwood.com\">Trevor Wood</a></li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","export const commafy = (value: number) => {\n  return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}","import React, { Component } from 'react';\nimport './Result.scss';\nimport {commafy} from '../../common/commafy';\nimport t from '../../i18n/i18n';\nimport Parser from 'html-react-parser';\nimport { Link } from 'react-router-dom';\n\nimport levels from '../../assets/levels.json'\n\nexport interface ResultProps {\n  location: any;\n};\nexport interface ResultState {\n  currentLevel: any;\n  currentXPAmount: any;\n  currentEarningAmount: any;\n  rewardsOpen: number[];\n};\n\nexport default class Result extends Component <ResultProps, ResultState> {\n  constructor(props: any) {\n    super(props);\n    const query = new URLSearchParams(this.props.location.search);\n\n    this.state = {\n      currentLevel: query.get('currentLevel'),\n      currentXPAmount: query.get('currentXPAmount'),\n      currentEarningAmount: query.get('currentEarningAmount'),\n      rewardsOpen: []\n    }\n  }\n\n  getCurrentLevelObject = (level: number) => {\n    let currentLevel = levels[0]\n\n    for (let i = 0; i < levels.length; i++) {\n      if (levels[i].level == level){\n        currentLevel = levels[i]\n        return currentLevel\n      }\n    }\n\n    console.error(\"getCurrentLevelObject could not find level\")\n    return currentLevel\n  }\n\n  convertMinutesToHoursAndMinutes = (minutes: number) => {\n    return {\n      hours: Math.floor(minutes/60),\n      minutes: minutes%60\n    }\n  }\n\n  formatTime = (time: any) => {\n    const hours = time.hours > 0 ? commafy(time.hours)+\" \"+t.t('result.hour', {count: time.hours}) : \"\"\n    const space = time.hours > 0 && time.minutes > 0 ? \", \" : \"\"\n    const minutes = time.minutes > 0 ? time.minutes+\" \"+t.t('result.minute',{count: time.minutes}) : \"\"\n    return hours+space+minutes\n  }\n\n  createListItems = () => {\n    let listItems = []\n    let currentLevel = this.getCurrentLevelObject(this.state.currentLevel)\n\n    for (let i = 0; i < levels.length; i++) {\n      let children = []\n      let forLevel = levels[i]\n\n      if (this.state.currentLevel >= forLevel.level){\n        continue;\n      }\n\n      let open = \"\"\n      if (this.state.rewardsOpen.includes(forLevel.level)){\n        open = \"open\"\n      }\n\n      let xpToGo = forLevel.totalXpReq - (currentLevel.totalXpReq+parseInt(this.state.currentXPAmount))\n      let timeToGetTo = Math.ceil(xpToGo / this.state.currentEarningAmount) * 5\n      let time = this.convertMinutesToHoursAndMinutes(timeToGetTo)\n\n      if (time.minutes <= 0 && time.hours <= 0){\n        continue;\n      }\n\n      children.push(<div key={i+\"a\"} className=\"first\">{forLevel.level}</div>)\n      children.push(<div key={i+\"b\"} className=\"second\">{this.formatTime(time).toLocaleString()}</div>)\n      children.push(<div key={i+\"c\"} className=\"third\">\n                      <div className=\"redButton small\" onClick={() => this.openRewards(forLevel.level)}>{t.t('general.rewards')}</div>\n                    </div>)\n      children.push(<div key={i+\"d\"} className={\"rewards \"+open}>{t.t(''+forLevel.rewards+'')}</div>)\n\n      listItems.push(<li key={i}>{children}</li>)\n    }\n\n    return listItems\n  }\n\n  openRewards = (level:number) => {\n\n    let index = this.state.rewardsOpen.indexOf(level)\n    let newState = this.state.rewardsOpen\n    if (index == -1){\n      //add\n      newState.push(level)\n    }else{\n      //remove\n      newState.splice(index, 1);\n    }\n\n    this.setState({\n      rewardsOpen: newState\n    });\n  }\n\n  render() {\n\n    const listItems = this.createListItems();\n\n    return (\n      <div className=\"result\">\n        <Link className=\"back\" to=\"/\">{t.t('general.back')}</Link>\n        <Link className=\"raw-data-button\" to=\"/raw-data\">{t.t('result.rawdata')}</Link>\n        <h3 className=\"intro-text\">\n          {Parser(t.t('result.main', {\n            currentLevel: this.state.currentLevel,\n            currentXp: this.state.currentXPAmount, \n            xpEarned: this.state.currentEarningAmount,\n          }))}\n        </h3>\n\n        <div className=\"results-ul-header\">\n          <div className=\"first\">{t.t('result.lvl')}</div>\n          <div className=\"second\">{t.t('result.timeToReachLevel')}</div> \n        </div>\n        <ul className=\"results-ul\">\n          {listItems}\n        </ul>\n        <div className=\"results-share-div\">\n          <div className=\"fb-share-button fb_iframe_widget\" data-href=\"http://www.pokemongoxp.com\" data-layout=\"button\" data-size=\"large\" data-mobile-iframe=\"true\" fb-xfbml-state=\"rendered\" fb-iframe-plugin-query=\"app_id=520425911493829&amp;container_width=43&amp;href=http%3A%2F%2Fwww.pokemongoxp.com%2F%3Flg%3Den&amp;layout=button&amp;locale=en_US&amp;mobile_iframe=true&amp;sdk=joey&amp;size=large\"><span><iframe scrolling=\"no\" allow=\"encrypted-media\" title=\"fb:share_button Facebook Social Plugin\" src=\"https://www.facebook.com/v2.7/plugins/share_button.php?app_id=520425911493829&amp;channel=https%3A%2F%2Fstaticxx.facebook.com%2Fconnect%2Fxd_arbiter%2Fr%2Fd_vbiawPdxB.js%3Fversion%3D44%23cb%3Df139a5ec669445%26domain%3Dwww.pokemongoxp.com%26origin%3Dhttp%253A%252F%252Fwww.pokemongoxp.com%252Ff339c3f47835308%26relation%3Dparent.parent&amp;container_width=43&amp;href=http%3A%2F%2Fwww.pokemongoxp.com%2F%3Flg%3Den&amp;layout=button&amp;locale=en_US&amp;mobile_iframe=true&amp;sdk=joey&amp;size=large\"></iframe></span></div>\n\n          <a className=\"twitter-share-button\" target=\"_blank\" href={\"https://twitter.com/intent/tweet?text=\"+t.t('result.twitterMessage')+\"&url=\"+\"https://www.pokemongoxp.com\"}>Tweet</a>\n        </div>\n        <div className=\"results-footer-div\">\n          <p>This website is not affiliated with Niantic or The Pokemon Company.</p>\n          <p>Made by <a href=\"https://trevorwood.com/\">Trevor Wood</a></p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './RawData.scss';\nimport t from '../../i18n/i18n';\nimport { Link } from 'react-router-dom';\n\nimport {commafy} from '../../common/commafy';\nimport levels from '../../assets/levels.json'\n\nexport interface RawDataProps {};\nexport interface RawDataState {};\n\nexport default class RawData extends Component <RawDataProps, RawDataState> {\n  constructor(props: RawDataProps) {\n    super(props);\n  }\n\n  printLevel = (level: number) => {\n    return (\n      <tr>\n        <td>{levels[level].level}</td>\n        <td>{levels[level].xpReq} </td>\n        <td>{levels[level].totalXpReq} </td>\n        <td>{levels[level].unlockedItems}</td>\n        <td>{levels[level].rewards} </td>\n      </tr>\n    )\n  }\n\n  render() {\n\n    const listItems = levels.map((d) => \n      <tr key={d.level}>\n        <td>{d.level}</td>\n        <td>{commafy(d.xpReq)} </td>\n        <td>{commafy(d.totalXpReq)} </td>\n        <td>{t.t(''+d.unlockedItems+'')}</td>\n        <td>{t.t(''+d.rewards+'')} </td>\n      </tr>\n    );\n\n    return (\n      <div className=\"raw-data\">\n        <div>\n          <h1>{t.t('rawdata.header')}</h1>\n          <Link className=\"raw-data-button\" to=\"/\">{t.t('general.back')}</Link>\n        </div>\n\n        <table className=\"rawdata-table\">\n          <tbody>\n            <tr>\n              <th>{t.t('rawdata.level')}</th>\n              <th>{t.t('rawdata.xpRequired')}</th>\n              <th>{t.t('rawdata.totalXPRequired')}</th>\n              <th>{t.t('rawdata.unlockedItems')}</th>\n              <th>{t.t('general.rewards')}</th>\n            </tr>\n            {listItems}\n          </tbody>\n        </table>\n\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './NotFound.scss';\n\nexport default class NotFound extends Component {\n\n  render() {\n    return (\n      <div className=\"not-found\">\n        <p>Sorry, this page doesn't exist.</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport i18n from './i18n/i18n';\n\nimport { Router, Route, Switch } from 'react-router-dom';\nimport Calculator from './components/Calculator/Calculator';\nimport Result from './components/Result/Result';\nimport RawData from './components/RawData/RawData';\nimport NotFound from './components/NotFound/NotFound';\nimport { createBrowserHistory } from 'history';\n\nexport default class App extends Component {\n\n  render() {\n    const browserHistory = createBrowserHistory();\n\n    browserHistory.listen((location, action) => {\n      window.scrollTo(0, 0);\n    });\n\n    document.documentElement.lang = i18n.t('lang');\n    \n    return (\n      <Router history={browserHistory}>\n        <div className=\"app\">\n          <Switch>\n            <Route exact path={\"/\"} component={Calculator} />\n            <Route path={\"/result\"} component={Result} />\n            <Route path={\"/rawdata\"} component={RawData} />\n            <Route path={\"/raw-data\"} component={RawData} />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n/i18n';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}